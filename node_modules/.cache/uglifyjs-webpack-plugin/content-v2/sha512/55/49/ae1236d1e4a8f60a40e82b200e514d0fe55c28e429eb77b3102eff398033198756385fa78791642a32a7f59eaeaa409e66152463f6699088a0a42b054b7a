{"map":"{\"version\":3,\"sources\":[\"webpack/bootstrap\",\"C:\\\\Users\\\\Администратор\\\\appjs/src\\\\app.js\"],\"names\":[\"installedModules\",\"__webpack_require__\",\"moduleId\",\"exports\",\"module\",\"i\",\"l\",\"modules\",\"call\",\"m\",\"c\",\"d\",\"name\",\"getter\",\"o\",\"Object\",\"defineProperty\",\"configurable\",\"enumerable\",\"get\",\"r\",\"value\",\"n\",\"__esModule\",\"object\",\"property\",\"prototype\",\"hasOwnProperty\",\"p\",\"s\",\"e\",\"Error\",\"code\",\"emitter\",\"player\",\"platforms\",\"stars\",\"game\",\"Phaser\",\"Game\",\"WEBGL\",\"preload\",\"load\",\"script\",\"image\",\"img\",\"src\",\"spritesheet\",\"create\",\"physics\",\"startSystem\",\"Physics\",\"ARCADE\",\"upKey\",\"input\",\"keyboard\",\"addKey\",\"Keyboard\",\"SPACEBAR\",\"leftKey\",\"A\",\"rightKey\",\"D\",\"add\",\"tileSprite\",\"world\",\"setBounds\",\"group\",\"enableBody\",\"ground\",\"height\",\"scale\",\"setTo\",\"body\",\"immovable\",\"ledge\",\"sprite\",\"centerX\",\"centerY\",\"arcade\",\"enable\",\"bounce\",\"y\",\"gravity\",\"collideWorldBounds\",\"fixedRotation\",\"animations\",\"star\",\"Math\",\"random\",\"createCursorKeys\",\"camera\",\"follow\",\"Camera\",\"FOLLOW_LOCKON\",\"makeParticles\",\"minParticleSpeed\",\"maxParticleSpeed\",\"minParticleScale\",\"maxParticleScale\",\"width\",\"flow\",\"filter\",\"CANVAS\",\"getContext\",\"update\",\"hitPlatform\",\"collide\",\"overlap\",\"collectStar\",\"this\",\"velocity\",\"x\",\"isDown\",\"play\",\"touching\",\"down\",\"render\",\"Image\",\"kill\"],\"mappings\":\"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\",\"sourcesContent\":[\" \\t// The module cache\\n \\tvar installedModules = {};\\n\\n \\t// The require function\\n \\tfunction __webpack_require__(moduleId) {\\n\\n \\t\\t// Check if module is in cache\\n \\t\\tif(installedModules[moduleId]) {\\n \\t\\t\\treturn installedModules[moduleId].exports;\\n \\t\\t}\\n \\t\\t// Create a new module (and put it into the cache)\\n \\t\\tvar module = installedModules[moduleId] = {\\n \\t\\t\\ti: moduleId,\\n \\t\\t\\tl: false,\\n \\t\\t\\texports: {}\\n \\t\\t};\\n\\n \\t\\t// Execute the module function\\n \\t\\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\\n\\n \\t\\t// Flag the module as loaded\\n \\t\\tmodule.l = true;\\n\\n \\t\\t// Return the exports of the module\\n \\t\\treturn module.exports;\\n \\t}\\n\\n\\n \\t// expose the modules object (__webpack_modules__)\\n \\t__webpack_require__.m = modules;\\n\\n \\t// expose the module cache\\n \\t__webpack_require__.c = installedModules;\\n\\n \\t// define getter function for harmony exports\\n \\t__webpack_require__.d = function(exports, name, getter) {\\n \\t\\tif(!__webpack_require__.o(exports, name)) {\\n \\t\\t\\tObject.defineProperty(exports, name, {\\n \\t\\t\\t\\tconfigurable: false,\\n \\t\\t\\t\\tenumerable: true,\\n \\t\\t\\t\\tget: getter\\n \\t\\t\\t});\\n \\t\\t}\\n \\t};\\n\\n \\t// define __esModule on exports\\n \\t__webpack_require__.r = function(exports) {\\n \\t\\tObject.defineProperty(exports, '__esModule', { value: true });\\n \\t};\\n\\n \\t// getDefaultExport function for compatibility with non-harmony modules\\n \\t__webpack_require__.n = function(module) {\\n \\t\\tvar getter = module && module.__esModule ?\\n \\t\\t\\tfunction getDefault() { return module['default']; } :\\n \\t\\t\\tfunction getModuleExports() { return module; };\\n \\t\\t__webpack_require__.d(getter, 'a', getter);\\n \\t\\treturn getter;\\n \\t};\\n\\n \\t// Object.prototype.hasOwnProperty.call\\n \\t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\\n\\n \\t// __webpack_public_path__\\n \\t__webpack_require__.p = \\\"\\\";\\n\\n\\n \\t// Load entry module and return exports\\n \\treturn __webpack_require__(__webpack_require__.s = 0);\\n\",\"import 'app.css'\\r\\n\\r\\nvar game = new Phaser.Game(800 - 4, 600 - 27, Phaser.WEBGL, '', { preload: preload, create: create, update: update, render: render });\\r\\nvar img = new Image(100, 200);\\r\\nimg.src = 'location/forest/background.jpg';\\r\\nfunction preload() {\\r\\n    game.load.script('filter', 'https://cdn.rawgit.com/photonstorm/phaser-ce/master/filters/Fire.js');\\r\\n\\r\\n    game.load.script('gray', 'https://cdn.rawgit.com/photonstorm/phaser-ce/master/filters/Gray.js');\\r\\n    game.load.image('snow', 'assets/snow.png');\\r\\n    game.load.image('leaf', 'assets/leaf1.png');\\r\\n    game.load.image('sky', img.src);\\r\\n    game.load.image('ground', 'assets/platform.png');\\r\\n    game.load.image('star', 'assets/star.png');\\r\\n    game.load.spritesheet('dude', 'character/model/sprite.png', 104, 151, 14);\\r\\n\\r\\n}\\r\\n\\r\\nvar emitter;\\r\\nvar player;\\r\\nvar platforms;\\r\\nvar cursors;\\r\\n\\r\\nvar stars;\\r\\nvar score = 0;\\r\\nvar scoreText;\\r\\n\\r\\nfunction create() {\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n    //  We're going to be using physics, so enable the Arcade Physics system\\r\\n    game.physics.startSystem(Phaser.Physics.ARCADE);\\r\\n\\r\\n    //  A simple background for our game\\r\\n\\r\\n\\r\\n    upKey = game.input.keyboard.addKey(Phaser.Keyboard.SPACEBAR);\\r\\n    leftKey = game.input.keyboard.addKey(Phaser.Keyboard.A);\\r\\n    rightKey = game.input.keyboard.addKey(Phaser.Keyboard.D);\\r\\n\\r\\n\\r\\n    game.add.tileSprite(0, 0, 1920, 600-27, 'sky');\\r\\n\\r\\n    game.world.setBounds(0, 0, 1920, 600-27);\\r\\n\\r\\n    //  The platforms group contains the ground and the 2 ledges we can jump on\\r\\n    platforms = game.add.group();\\r\\n\\r\\n    //  We will enable physics for any object that is created in this group\\r\\n    platforms.enableBody = true;\\r\\n\\r\\n    // Here we create the ground.\\r\\n    var ground = platforms.create(0, game.world.height - 64, 'ground');\\r\\n\\r\\n    //  Scale it to fit the width of the game (the original sprite is 400x32 in size)\\r\\n    ground.scale.setTo(20, 2);\\r\\n    //  This stops it from falling away when you jump on it\\r\\n    ground.body.immovable = true;\\r\\n\\r\\n    //  Now let's create two ledges\\r\\n    var ledge = platforms.create(400, 450, 'ground');\\r\\n    ledge.body.immovable = true;\\r\\n\\r\\n    ledge = platforms.create(-150, 100, 'ground');\\r\\n    ledge.body.immovable = true;\\r\\n\\r\\n    //game.input.onDown.add(shake, this);\\r\\n    // The player and its settings    \\r\\n    player = game.add.sprite(game.world.centerX, game.world.centerY, 'dude');\\r\\n    //player = game.add.sprite(32, game.world.height - 150, 'dude');\\r\\n\\r\\n    //  We need to enable physics on the player\\r\\n    game.physics.arcade.enable(player);\\r\\n\\r\\n    //  Player physics properties. Give the little guy a slight bounce.\\r\\n    player.body.bounce.y = 0;\\r\\n    player.body.gravity.y = 800;\\r\\n    player.body.collideWorldBounds = true;\\r\\n\\r\\n    player.body.fixedRotation = true;\\r\\n\\r\\n    //  Our two animations, walking left and right.\\r\\n    player.animations.add('right', [0, 1, 2, 3, 4, 5], 6, true);\\r\\n    player.animations.add('left', [6, 7, 8, 9, 10, 11], 6, true);\\r\\n    player.animations.add('stay', [12, 13], 1, true);\\r\\n\\r\\n    //  Finally some stars to collect\\r\\n    stars = game.add.group();\\r\\n\\r\\n    //  We will enable physics for any star that is created in this group\\r\\n    stars.enableBody = true;\\r\\n\\r\\n    //  Here we'll create 12 of them evenly spaced apart\\r\\n    for (var i = 0; i < 12; i++)\\r\\n    {\\r\\n        //  Create a star inside of the 'stars' group\\r\\n        var star = stars.create(i * 70, 0, 'star');\\r\\n\\r\\n        //  Let gravity do its thing\\r\\n        star.body.gravity.y = 300;\\r\\n\\r\\n        //  This just gives each star a slightly random bounce value\\r\\n        star.body.bounce.y = 0.7 + Math.random() * 0.2;\\r\\n    }\\r\\n\\r\\n    //  The score\\r\\n    //scoreText = game.add.text(16, 16, 'score: 0', { fontSize: '32px', fill: '#000' });\\r\\n\\r\\n    //  Our controls.\\r\\n    cursors = game.input.keyboard.createCursorKeys();\\r\\n    \\r\\n    game.camera.follow(player, Phaser.Camera.FOLLOW_LOCKON, 0.1, 0.1);\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n    emitter = game.add.emitter(game.world.centerX, 0, 100);\\r\\n\\r\\n    emitter.makeParticles('snow');\\r\\n\\r\\n    emitter.minParticleSpeed.setTo(-300, 30);\\r\\n    emitter.maxParticleSpeed.setTo(300, 100);\\r\\n    emitter.minParticleScale = 0.03;\\r\\n    emitter.maxParticleScale = 0.05;\\r\\n    emitter.gravity = 50;\\r\\n    emitter.width  = 1920;\\r\\n    //emitter.width = \\r\\n\\r\\n    //  This will emit a quantity of 5 particles every 500ms. Each particle will live for 2000ms.\\r\\n    //  The -1 means \\\"run forever\\\"\\r\\n    emitter.flow(4000, 500, 20, -1);\\r\\n\\r\\n\\r\\n    //filter = game.add.filter('gray');\\r\\n    //game.world.filters = [filter];\\r\\n\\r\\n\\r\\n\\r\\n    var gray = game.add.filter('Gray');\\r\\n\\r\\n    //game.world.filters = [gray];\\r\\n\\r\\n    Phaser.CANVAS.getContext('2d').filter = 'blur(5px)';\\r\\n\\r\\n}\\r\\n\\r\\nfunction update() {\\r\\n\\r\\n    //  Collide the player and the stars with the platforms\\r\\n    var hitPlatform = game.physics.arcade.collide(player, platforms);\\r\\n    game.physics.arcade.collide(stars, platforms);\\r\\n\\r\\n    //  Checks to see if the player overlaps with any of the stars, if he does call the collectStar function\\r\\n    game.physics.arcade.overlap(player, stars, collectStar, null, this);\\r\\n\\r\\n    //  Reset the players velocity (movement)\\r\\n\\r\\n    //player.body.setZeroVelocity();\\r\\n    player.body.velocity.x = 0;\\r\\n\\r\\n    if (leftKey.isDown)\\r\\n    {\\r\\n        //  Move to the left\\r\\n        player.body.velocity.x = -150;\\r\\n\\r\\n        player.animations.play('left');\\r\\n    }\\r\\n    else if (rightKey.isDown)\\r\\n    {\\r\\n        //  Move to the right\\r\\n        player.body.velocity.x = 150;\\r\\n\\r\\n        player.animations.play('right');\\r\\n    }\\r\\n    else\\r\\n    {\\r\\n        //  Stand still\\r\\n        player.animations.play('stay');\\r\\n    }\\r\\n    \\r\\n    //  Allow the player to jump if they are touching the ground.\\r\\n    if (upKey.isDown && player.body.touching.down && hitPlatform)\\r\\n    {\\r\\n        player.body.velocity.y = -350;\\r\\n    }\\r\\n\\r\\n}\\r\\n\\r\\nfunction collectStar (player, star) {\\r\\n    \\r\\n    // Removes the star from the screen\\r\\n    star.kill();\\r\\n\\r\\n    //  Add and update the score\\r\\n    //score += 10;\\r\\n    //scoreText.text = 'Score: ' + score;\\r\\n\\r\\n}\\r\\n\\r\\nfunction render() {\\r\\n\\r\\n    //game.debug.cameraInfo(game.camera, 32, 32);\\r\\n    //game.debug.spriteCoords(player, 32, 500);\\r\\n\\r\\n}\"]}","code":"!function(e){var a={};function r(t){if(a[t])return a[t].exports;var o=a[t]={i:t,l:!1,exports:{}};return e[t].call(o.exports,o,o.exports,r),o.l=!0,o.exports}r.m=e,r.c=a,r.d=function(e,a,t){r.o(e,a)||Object.defineProperty(e,a,{configurable:!1,enumerable:!0,get:t})},r.r=function(e){Object.defineProperty(e,\"__esModule\",{value:!0})},r.n=function(e){var a=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(a,\"a\",a),a},r.o=function(e,a){return Object.prototype.hasOwnProperty.call(e,a)},r.p=\"\",r(r.s=0)}([function(e,a,r){\"use strict\";r(!function(){var e=new Error('Cannot find module \"app.css\"');throw e.code=\"MODULE_NOT_FOUND\",e}());var t,o,n,d,i=new Phaser.Game(796,573,Phaser.WEBGL,\"\",{preload:function(){i.load.script(\"filter\",\"https://cdn.rawgit.com/photonstorm/phaser-ce/master/filters/Fire.js\"),i.load.script(\"gray\",\"https://cdn.rawgit.com/photonstorm/phaser-ce/master/filters/Gray.js\"),i.load.image(\"snow\",\"assets/snow.png\"),i.load.image(\"leaf\",\"assets/leaf1.png\"),i.load.image(\"sky\",s.src),i.load.image(\"ground\",\"assets/platform.png\"),i.load.image(\"star\",\"assets/star.png\"),i.load.spritesheet(\"dude\",\"character/model/sprite.png\",104,151,14)},create:function(){i.physics.startSystem(Phaser.Physics.ARCADE),upKey=i.input.keyboard.addKey(Phaser.Keyboard.SPACEBAR),leftKey=i.input.keyboard.addKey(Phaser.Keyboard.A),rightKey=i.input.keyboard.addKey(Phaser.Keyboard.D),i.add.tileSprite(0,0,1920,573,\"sky\"),i.world.setBounds(0,0,1920,573),(n=i.add.group()).enableBody=!0;var e=n.create(0,i.world.height-64,\"ground\");e.scale.setTo(20,2),e.body.immovable=!0;var a=n.create(400,450,\"ground\");a.body.immovable=!0,(a=n.create(-150,100,\"ground\")).body.immovable=!0,o=i.add.sprite(i.world.centerX,i.world.centerY,\"dude\"),i.physics.arcade.enable(o),o.body.bounce.y=0,o.body.gravity.y=800,o.body.collideWorldBounds=!0,o.body.fixedRotation=!0,o.animations.add(\"right\",[0,1,2,3,4,5],6,!0),o.animations.add(\"left\",[6,7,8,9,10,11],6,!0),o.animations.add(\"stay\",[12,13],1,!0),(d=i.add.group()).enableBody=!0;for(var r=0;r<12;r++){var s=d.create(70*r,0,\"star\");s.body.gravity.y=300,s.body.bounce.y=.7+.2*Math.random()}i.input.keyboard.createCursorKeys(),i.camera.follow(o,Phaser.Camera.FOLLOW_LOCKON,.1,.1),(t=i.add.emitter(i.world.centerX,0,100)).makeParticles(\"snow\"),t.minParticleSpeed.setTo(-300,30),t.maxParticleSpeed.setTo(300,100),t.minParticleScale=.03,t.maxParticleScale=.05,t.gravity=50,t.width=1920,t.flow(4e3,500,20,-1);i.add.filter(\"Gray\");Phaser.CANVAS.getContext(\"2d\").filter=\"blur(5px)\"},update:function(){var e=i.physics.arcade.collide(o,n);i.physics.arcade.collide(d,n),i.physics.arcade.overlap(o,d,l,null,this),o.body.velocity.x=0,leftKey.isDown?(o.body.velocity.x=-150,o.animations.play(\"left\")):rightKey.isDown?(o.body.velocity.x=150,o.animations.play(\"right\")):o.animations.play(\"stay\");upKey.isDown&&o.body.touching.down&&e&&(o.body.velocity.y=-350)},render:function(){}}),s=new Image(100,200);s.src=\"location/forest/background.jpg\";function l(e,a){a.kill()}}]);","extractedComments":[]}